networks:
  web: {}

volumes:
  clinica_storage: {}

services:
  traefik:
    image: traefik:v3.1
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.lets.acme.httpchallenge=true
      - --certificatesresolvers.lets.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.lets.acme.email=tu-email@asrm.dev
      - --certificatesresolvers.lets.acme.storage=/letsencrypt/acme.json
    ports: ["80:80","443:443"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks: [web]

  php:
    image: ghcr.io/sebasrodmag/clinicamv-php:main
    volumes:
      - clinica_storage:/var/www/html/storage
      - ./clinica-backend/.env:/var/www/html/.env:ro
    environment:
      APP_ENV: production
      APP_URL: https://api.asrm.dev
      LOG_CHANNEL: stderr
    networks: [web]

  api:
    image: ghcr.io/sebasrodmag/clinicamv-api:main
    depends_on: [php]
    volumes:
      - clinica_storage:/var/www/html/storage
      - ./infra/nginx/laravel.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.asrm.dev`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=lets
      - traefik.http.services.api.loadbalancer.server.port=80
    networks: [web]

  frontend:
    image: ghcr.io/sebasrodmag/clinicamv-frontend:main
    labels:
      - traefik.enable=true
      - traefik.http.routers.front.rule=Host(`app.asrm.dev`)
      - traefik.http.routers.front.entrypoints=websecure
      - traefik.http.routers.front.tls.certresolver=lets
      - traefik.http.services.front.loadbalancer.server.port=80
    networks: [web]
